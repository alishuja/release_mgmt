@model ReleaseMan.Models.Project
@{ ViewBag.Title = "Details"; }
@{ double ProjectCapacity = 0, ProjectHours = 0, ReleaseHours = 0; double percentage = 0, percentage_last = 0; ; }
@foreach (var Release in Model.Releases) {
    foreach (var story in Release.Stories) { ReleaseHours += story.Estimate; }
 
    ProjectCapacity += Release.Capacity;
    ProjectHours += ReleaseHours;
    ReleaseHours = 0;
}
@{ percentage = ProjectCapacity > 0 ? (ProjectHours / ProjectCapacity) * 100 : 0; }
<div class="clear">
</div>
<div class="grid_12">
    <hr />
</div>
<div class="clear">
</div>
<div class="grid_8 secondary-actions">

    <p>
        @Html.ActionLink("All Projects /", "Index", "Project", null, null)
        @Html.ActionLink(@Model.Name + " /", "Details", "Project", null, null)
    </p>
    <h2>
        Project: @Html.DisplayFor(model => model.Name)</h2>
    <p>
        Project description: @Html.DisplayFor(model => model.Description)</p>
</div>
<div class="grid_4 secondary-actions">
    <p>
        @Html.ActionLink("+ Release", "Create", "Release", new { id = Model.ID }, new { @class = "buttonlink right" })
        @Html.ActionLink("Manage releases", "Manage", "Project", new { id = Model.ID }, new { @class = "buttonlink right" })
    </p>
</div>
<div class="clear">
</div>
<div class="grid_12">
    <hr />
</div>
<div class="clear">
</div>
<div class="grid_12">
    <ul class="item-list">
        <li>
            <h3>
                Overall progress:
            </h3>
            <div class="bar-wrap">
                <div class="bar" style="width: @percentage.ToString("f0").Replace(',', '.')%;">
                    <p class="center">
                        @percentage.ToString("f0")&#37;</p>
                </div>
            </div>
            <h3>
                Timeline:</h3>
            <div class="bar-wrap">
                @foreach (var Release in Model.Releases) {
                    foreach (var story in Release.Stories) { ReleaseHours += story.Estimate; }
 
                    percentage = ProjectCapacity > 0 ? (Release.Capacity / ProjectCapacity) * 100 : 0;
                    
                    <div class="bar" style="width: @percentage.ToString("f3").Replace(',', '.')%; margin-left: @percentage_last.ToString("f3").Replace(',', '.')%;">
                        <p class="center">
                            @Release.Name , @ReleaseHours.ToString()/@Release.Capacity.ToString()h</p>
                    </div>
                    percentage_last += percentage; ReleaseHours = 0;
                }
            </div>
        </li>
    </ul>
</div>
<div class="grid_12">
    <ul class="item-list">
        @foreach (var Release in Model.Releases) {
            foreach (var story in Release.Stories) { ReleaseHours += story.Estimate; }
 
            percentage = (int)(Release.Capacity > 0 ? (ReleaseHours / Release.Capacity) * 100 : 100);
            string barcolor = percentage > 100 ? "background-color:red;" : "";
            
            <li>
                <h2>@Release.Name</h2>
                <div class="bar-wrap">
                    <div class="bar" style=" width: @Math.Min(percentage, 100).ToString()%; @barcolor ">
                        <p class="center">
                            @ReleaseHours.ToString() / @Release.Capacity.ToString() hours
                        </p>
                    </div>
                </div>
                @{ ReleaseHours = 0; }
                @Html.ActionLink("Edit", "Edit", "Release", new { id = Release.ID }, new { @class = "buttonlink right" })
                @Html.ActionLink("Details", "Details", "Release", new { id = Release.ID }, new { @class = "buttonlink right" })
                @Html.ActionLink("Delete", "Delete", "Release", new { id = Release.ID }, new { @class = "buttonlink right", onclick = "return confirm('Sure you want to delete?');" })
            </li>
        }
    </ul>
</div>